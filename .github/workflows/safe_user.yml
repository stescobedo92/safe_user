name: SafeUser Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: "Y"
          MSSQL_SA_PASSWORD: "Tester*31"
        ports:
          - 1433:1433
        options: >-
          --health-cmd=" /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'Tester*31' -Q 'SELECT 1'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Build project
        run: cargo build --release

      - name: Run unit tests
        run: cargo test --release

      - name: Build Docker images
        run: docker-compose build

      - name: Start services with Docker Compose
        run: docker-compose up -d

      - name: Wait for SQL Server to be healthy
        run: |
          echo "Waiting for mssql to be healthy..."
          for i in {1..30}; do
            docker-compose exec mssql-docker /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Tester*31" -Q "SELECT 1" && break
            echo "Waiting for mssql..."
            sleep 5
          done

      - name: Run integration tests
        run: cargo test --release --test integration_tests
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Shutdown services
        if: always()
        run: docker-compose down

      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag Docker image
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          docker tag safe_user:latest your_dockerhub_username/safe_user:latest

      - name: Push Docker image
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          docker push your_dockerhub_username/safe_user:latest