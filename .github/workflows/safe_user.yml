name: SafeUser Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions/setup-rust@v3
        with:
          rust-version: stable

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Build project
        run: cargo build --release

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker images
        run: docker-compose build

      - name: Start services with Docker Compose
        run: |
          docker-compose up -d
          echo "Waiting for mssql to be healthy..."
          for i in {1..30}; do
            docker-compose exec mssql-docker /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Tester*31" -Q "SELECT 1" && break
            echo "Waiting for mssql..."
            sleep 5
          done

      - name: Run integration tests
        run: |
          cargo test --release --test handler_integration_tests
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Shutdown services
        if: always()
        run: docker-compose down

      - name: Build and Push Docker image
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          docker-compose build
          docker tag safe_user:latest your_dockerhub_username/safe_user:latest
          docker push your_dockerhub_username/safe_user:latest